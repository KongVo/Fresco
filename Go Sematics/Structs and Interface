Try it Out - Structs and Interface


package main
import (
    "fmt"
    "math"
    )
//Interface declaration
type shape interface {
    area() float64
    perimeter() float64
}
//Struct declaration for rectangle
type rectangle struct{
  length, height float64
}
//Struct declaration for circle
type circle struct{
  radius float64
}
//Method declarations for rectangle
func (r rectangle) area() float64 {
    return r.length * r.height
}
func (r rectangle) perimeter() float64 {
    return 2 * r.length + 2 * r.height
}
//Method declarations for circle
func (c circle) area() float64 {
    return math.Pi * c.radius * c.radius
}
func (c circle) perimeter() float64 {
    return 2 * math.Pi * c.radius
}
func main() {
    var num float64
    var num1 float64
    var num2 float64
    
    fmt.Scan(&num)
    fmt.Scan(&num1)
    fmt.Scan(&num2)
    r := rectangle{length: num, height: num1}
    c := circle{radius: num2}
    fmt.Println(r.area())
    fmt.Println(r.perimeter())
    fmt.Println(c.area())
    fmt.Println(c.perimeter())
}
